{"ast":null,"code":"import { clamp } from '@mantine/hooks';\nimport { padTime } from '../pad-time/pad-time.js';\nimport { allButLastDigit } from './all-but-last-digit/all-but-last-digit.js';\nfunction createTimeHandler(_ref) {\n  let {\n    onChange,\n    nextRef,\n    min,\n    max,\n    nextMax\n  } = _ref;\n  return function (value, triggerShift) {\n    let forceTriggerShift = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _a, _b;\n    const parsed = parseInt(value, 10);\n    if (Number.isNaN(parsed)) {\n      return;\n    }\n    if (parsed > allButLastDigit(max) || forceTriggerShift) {\n      const lastDigit = parsed % 10;\n      let updatedValue;\n      let carryOver;\n      if (parsed > max && nextMax && lastDigit <= allButLastDigit(nextMax)) {\n        updatedValue = padTime(allButLastDigit(parsed).toString());\n        carryOver = padTime(lastDigit.toString());\n      } else {\n        updatedValue = padTime(clamp(parsed, min, max).toString());\n      }\n      onChange(updatedValue, carryOver);\n      triggerShift && ((_a = nextRef == null ? void 0 : nextRef.current) == null ? void 0 : _a.focus());\n      triggerShift && ((_b = nextRef == null ? void 0 : nextRef.current) == null ? void 0 : _b.select());\n      return;\n    }\n    onChange(parsed.toString());\n  };\n}\nexport { createTimeHandler };","map":{"version":3,"mappings":";;;AAGO,SAASA,iBAAiB,OAA2C;EAAA,IAA1C;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,GAAG;IAAEC,GAAG;IAAEC;EAAO,CAAE;EACxE,OAAO,UAACC,KAAK,EAAEC,YAAY,EAAgC;IAAA,IAA9BC,iBAAiB,uEAAG,KAAK;IACpD,IAAIC,EAAE,EAAEC,EAAE;IACV,MAAMC,MAAM,GAAGC,QAAQ,CAACN,KAAK,EAAE,EAAE,CAAC;IAClC,IAAIO,MAAM,CAACC,KAAK,CAACH,MAAM,CAAC,EAAE;MACxB;IACN;IACI,IAAIA,MAAM,GAAGI,eAAe,CAACX,GAAG,CAAC,IAAII,iBAAiB,EAAE;MACtD,MAAMQ,SAAS,GAAGL,MAAM,GAAG,EAAE;MAC7B,IAAIM,YAAY;MAChB,IAAIC,SAAS;MACb,IAAIP,MAAM,GAAGP,GAAG,IAAIC,OAAO,IAAIW,SAAS,IAAID,eAAe,CAACV,OAAO,CAAC,EAAE;QACpEY,YAAY,GAAGE,OAAO,CAACJ,eAAe,CAACJ,MAAM,CAAC,CAACS,QAAQ,EAAE,CAAC;QAC1DF,SAAS,GAAGC,OAAO,CAACH,SAAS,CAACI,QAAQ,EAAE,CAAC;MACjD,CAAO,MAAM;QACLH,YAAY,GAAGE,OAAO,CAACE,KAAK,CAACV,MAAM,EAAER,GAAG,EAAEC,GAAG,CAAC,CAACgB,QAAQ,EAAE,CAAC;MAClE;MACMnB,QAAQ,CAACgB,YAAY,EAAEC,SAAS,CAAC;MACjCX,YAAY,KAAK,CAACE,EAAE,GAAGP,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACoB,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGb,EAAE,CAACc,KAAK,EAAE,CAAC;MACjGhB,YAAY,KAAK,CAACG,EAAE,GAAGR,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACoB,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGZ,EAAE,CAACc,MAAM,EAAE,CAAC;MAClG;IACN;IACIvB,QAAQ,CAACU,MAAM,CAACS,QAAQ,EAAE,CAAC;EAC/B,CAAG;AACH","names":["createTimeHandler","onChange","nextRef","min","max","nextMax","value","triggerShift","forceTriggerShift","_a","_b","parsed","parseInt","Number","isNaN","allButLastDigit","lastDigit","updatedValue","carryOver","padTime","toString","clamp","current","focus","select"],"sources":["C:\\Users\\55859\\Desktop\\front-dot-community\\node_modules\\@mantine\\dates\\src\\components\\TimeInputBase\\create-time-handler\\create-time-handler.ts"],"sourcesContent":["import { clamp } from '@mantine/hooks';\nimport { padTime } from '../pad-time/pad-time';\nimport { allButLastDigit } from './all-but-last-digit/all-but-last-digit';\n\ninterface CreateTimeHandler {\n  onChange(value: string, carryOver?: string): void;\n  nextRef?: React.RefObject<HTMLInputElement>;\n  min: number;\n  max: number;\n  nextMax?: number;\n}\n\nexport function createTimeHandler({ onChange, nextRef, min, max, nextMax }: CreateTimeHandler) {\n  return (value: string, triggerShift: boolean, forceTriggerShift = false) => {\n    const parsed = parseInt(value, 10);\n\n    if (Number.isNaN(parsed)) {\n      return;\n    }\n\n    if (parsed > allButLastDigit(max) || forceTriggerShift) {\n      const lastDigit = parsed % 10;\n\n      let updatedValue: string;\n      let carryOver: string | undefined;\n\n      /*\n        Check if it is possible to construct a number that satisfies the following conditions:\n          1. The number starts with the last digit of the current value.\n          2. The number is less than the next field's maximum value constraint.\n      */\n      if (parsed > max && nextMax && lastDigit <= allButLastDigit(nextMax)) {\n        updatedValue = padTime(allButLastDigit(parsed).toString());\n        carryOver = padTime(lastDigit.toString());\n      } else {\n        updatedValue = padTime(clamp(parsed, min, max).toString());\n      }\n\n      onChange(updatedValue, carryOver);\n      triggerShift && nextRef?.current?.focus();\n      triggerShift && nextRef?.current?.select();\n      return;\n    }\n\n    onChange(parsed.toString());\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}