{"ast":null,"code":"import dayjs from 'dayjs';\nimport React, { forwardRef, useState, useRef } from 'react';\nimport { useUncontrolled, upperFirst, useMergedRef } from '@mantine/hooks';\nimport { useComponentDefaultProps, useMantineTheme } from '@mantine/core';\nimport { RangeCalendar } from '../RangeCalendar/RangeCalendar.js';\nimport { DatePickerBase } from '../DatePickerBase/DatePickerBase.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst validationRule = val => Array.isArray(val) && val.length === 2 && val.every(v => v instanceof Date);\nconst isFirstDateSet = val => Array.isArray(val) && val.length === 2 && val[0] instanceof Date;\nconst defaultProps = {\n  shadow: \"sm\",\n  transitionDuration: 200,\n  closeCalendarOnChange: true,\n  labelFormat: \"MMMM YYYY\",\n  initiallyOpened: false,\n  size: \"sm\",\n  dropdownType: \"popover\",\n  labelSeparator: \"\\u2013\",\n  clearable: true,\n  firstDayOfWeek: \"monday\",\n  allowSingleDateInRange: false,\n  amountOfMonths: 1,\n  withinPortal: false,\n  openDropdownOnClear: false\n};\nconst DateRangePicker = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"DateRangePicker\", defaultProps, props),\n    {\n      value,\n      onChange,\n      defaultValue,\n      classNames,\n      styles,\n      shadow,\n      locale,\n      inputFormat,\n      transitionDuration,\n      transitionTimingFunction,\n      nextMonthLabel,\n      previousMonthLabel,\n      closeCalendarOnChange,\n      labelFormat,\n      dayClassName,\n      dayStyle,\n      disableOutsideEvents,\n      minDate,\n      maxDate,\n      excludeDate,\n      initialMonth,\n      initiallyOpened,\n      size,\n      dropdownType,\n      labelSeparator,\n      clearable,\n      clearButtonLabel,\n      firstDayOfWeek,\n      allowLevelChange,\n      allowSingleDateInRange,\n      amountOfMonths,\n      withinPortal,\n      initialLevel,\n      onDropdownClose,\n      onDropdownOpen,\n      hideOutsideDates,\n      hideWeekdays,\n      renderDay,\n      openDropdownOnClear,\n      unstyled,\n      weekendDays,\n      yearLabelFormat,\n      nextDecadeLabel,\n      nextYearLabel,\n      previousDecadeLabel,\n      previousYearLabel\n    } = _a,\n    others = __objRest(_a, [\"value\", \"onChange\", \"defaultValue\", \"classNames\", \"styles\", \"shadow\", \"locale\", \"inputFormat\", \"transitionDuration\", \"transitionTimingFunction\", \"nextMonthLabel\", \"previousMonthLabel\", \"closeCalendarOnChange\", \"labelFormat\", \"dayClassName\", \"dayStyle\", \"disableOutsideEvents\", \"minDate\", \"maxDate\", \"excludeDate\", \"initialMonth\", \"initiallyOpened\", \"size\", \"dropdownType\", \"labelSeparator\", \"clearable\", \"clearButtonLabel\", \"firstDayOfWeek\", \"allowLevelChange\", \"allowSingleDateInRange\", \"amountOfMonths\", \"withinPortal\", \"initialLevel\", \"onDropdownClose\", \"onDropdownOpen\", \"hideOutsideDates\", \"hideWeekdays\", \"renderDay\", \"openDropdownOnClear\", \"unstyled\", \"weekendDays\", \"yearLabelFormat\", \"nextDecadeLabel\", \"nextYearLabel\", \"previousDecadeLabel\", \"previousYearLabel\"]);\n  const theme = useMantineTheme();\n  const finalLocale = locale || theme.datesLocale;\n  const dateFormat = inputFormat || theme.dateFormat;\n  const [dropdownOpened, setDropdownOpened] = useState(initiallyOpened);\n  const calendarSize = size === \"lg\" || size === \"xl\" ? \"md\" : \"sm\";\n  const inputRef = useRef();\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [null, null],\n    onChange\n  });\n  const handleValueChange = range => {\n    setValue(range);\n    if (closeCalendarOnChange && validationRule(range)) {\n      setDropdownOpened(false);\n      onDropdownClose == null ? void 0 : onDropdownClose();\n      window.setTimeout(() => {\n        var _a2;\n        return (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\n      }, 0);\n    }\n  };\n  const valueValid = validationRule(_value);\n  const firstValueValid = isFirstDateSet(_value);\n  const firstDateLabel = _value[0] ? upperFirst(dayjs(_value[0]).locale(finalLocale).format(dateFormat)) : \"\";\n  const secondDateLabel = _value[1] ? upperFirst(dayjs(_value[1]).locale(finalLocale).format(dateFormat)) : \"\";\n  const handleClear = () => {\n    var _a2;\n    setValue([null, null]);\n    setDropdownOpened(true);\n    openDropdownOnClear && (onDropdownOpen == null ? void 0 : onDropdownOpen());\n    (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\n  };\n  const handleDropdownToggle = isOpened => {\n    if (!isOpened && firstValueValid && _value[1] === null) {\n      handleClear();\n    }\n    setDropdownOpened(isOpened);\n  };\n  return /* @__PURE__ */React.createElement(DatePickerBase, __spreadValues({\n    dropdownOpened,\n    setDropdownOpened: handleDropdownToggle,\n    shadow,\n    transitionDuration,\n    ref: useMergedRef(ref, inputRef),\n    size,\n    styles,\n    classNames,\n    inputLabel: firstValueValid ? `${firstDateLabel} ${labelSeparator} ${secondDateLabel}` : \"\",\n    __staticSelector: \"DateRangePicker\",\n    dropdownType,\n    clearable: clearable && firstValueValid,\n    clearButtonLabel,\n    onClear: handleClear,\n    withinPortal,\n    amountOfMonths,\n    onDropdownClose,\n    onDropdownOpen,\n    unstyled\n  }, others), /* @__PURE__ */React.createElement(RangeCalendar, {\n    classNames,\n    styles,\n    locale: finalLocale,\n    nextMonthLabel,\n    previousMonthLabel,\n    initialMonth: valueValid ? _value[0] : initialMonth,\n    value: _value,\n    onChange: handleValueChange,\n    labelFormat,\n    dayClassName,\n    dayStyle,\n    disableOutsideEvents,\n    minDate,\n    maxDate,\n    excludeDate,\n    __staticSelector: \"DateRangePicker\",\n    fullWidth: dropdownType === \"modal\",\n    firstDayOfWeek,\n    size: dropdownType === \"modal\" ? \"lg\" : calendarSize,\n    allowLevelChange,\n    allowSingleDateInRange,\n    amountOfMonths,\n    initialLevel,\n    hideOutsideDates,\n    hideWeekdays,\n    renderDay,\n    unstyled,\n    weekendDays,\n    yearLabelFormat,\n    nextDecadeLabel,\n    nextYearLabel,\n    previousDecadeLabel,\n    previousYearLabel\n  }));\n});\nDateRangePicker.displayName = \"@mantine/dates/DateRangePicker\";\nexport { DateRangePicker };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","validationRule","val","Array","isArray","length","every","v","Date","isFirstDateSet","defaultProps","shadow","transitionDuration","closeCalendarOnChange","labelFormat","initiallyOpened","size","dropdownType","labelSeparator","clearable","firstDayOfWeek","allowSingleDateInRange","amountOfMonths","withinPortal","openDropdownOnClear","DateRangePicker","forwardRef","props","ref","_a","useComponentDefaultProps","onChange","defaultValue","classNames","styles","locale","inputFormat","transitionTimingFunction","nextMonthLabel","previousMonthLabel","dayClassName","dayStyle","disableOutsideEvents","minDate","maxDate","excludeDate","initialMonth","clearButtonLabel","allowLevelChange","initialLevel","onDropdownClose","onDropdownOpen","hideOutsideDates","hideWeekdays","renderDay","unstyled","weekendDays","yearLabelFormat","nextDecadeLabel","nextYearLabel","previousDecadeLabel","previousYearLabel","others","theme","useMantineTheme","finalLocale","datesLocale","dateFormat","dropdownOpened","setDropdownOpened","useState","calendarSize","inputRef","useRef","_value","setValue","useUncontrolled","finalValue","handleValueChange","range","window","setTimeout","_a2","current","focus","valueValid","firstValueValid","firstDateLabel","upperFirst","dayjs","format","secondDateLabel","handleClear","handleDropdownToggle","isOpened","React","createElement","DatePickerBase","useMergedRef","inputLabel","__staticSelector","onClear","RangeCalendar","fullWidth","displayName"],"sources":["C:\\Users\\55859\\Desktop\\front-dot-community\\node_modules\\@mantine\\dates\\src\\components\\DateRangePicker\\DateRangePicker.tsx"],"sourcesContent":["import dayjs from 'dayjs';\nimport React, { useState, useRef, forwardRef } from 'react';\nimport { useUncontrolled, useMergedRef, upperFirst } from '@mantine/hooks';\nimport { useMantineTheme, useComponentDefaultProps } from '@mantine/core';\nimport { FirstDayOfWeek } from '../../types';\nimport { CalendarSharedProps } from '../CalendarBase/CalendarBase';\nimport { RangeCalendar } from '../RangeCalendar/RangeCalendar';\nimport { DatePickerBase, DatePickerBaseSharedProps } from '../DatePickerBase/DatePickerBase';\n\nexport type DateRangePickerValue = [Date | null, Date | null];\n\nexport interface DateRangePickerProps\n  extends Omit<DatePickerBaseSharedProps, 'value' | 'onChange' | 'fixOnBlur'>,\n    Omit<\n      CalendarSharedProps,\n      | 'size'\n      | 'styles'\n      | 'classNames'\n      | 'value'\n      | 'onChange'\n      | 'onMonthChange'\n      | 'onMonthChange'\n      | 'onChange'\n      | 'isDateInRange'\n      | 'isDateFirstInRange'\n      | 'isDateLastInRange'\n      | 'month'\n    > {\n  /** Selected date, required with controlled input */\n  value?: DateRangePickerValue;\n\n  /** Called when date range changes */\n  onChange?(value: DateRangePickerValue): void;\n\n  /** Default value for uncontrolled input */\n  defaultValue?: DateRangePickerValue;\n\n  /** Set to false to force dropdown to stay open after date was selected */\n  closeCalendarOnChange?: boolean;\n\n  /** Set to true to open dropdown on clear */\n  openDropdownOnClear?: boolean;\n\n  /** dayjs input format */\n  inputFormat?: string;\n\n  /** Control initial dropdown opened state */\n  initiallyOpened?: boolean;\n\n  /** Input name, useful fon uncontrolled variant to capture data with native form */\n  name?: string;\n\n  /** Separator between dates */\n  labelSeparator?: string;\n\n  /** Set first day of the week */\n  firstDayOfWeek?: FirstDayOfWeek;\n\n  /** Allow one date to be selected as range */\n  allowSingleDateInRange?: boolean;\n\n  /** Allows to show multiple months */\n  amountOfMonths?: number;\n\n  /** Render day based on the date */\n  renderDay?(date: Date): React.ReactNode;\n}\n\nconst validationRule = (val: any) =>\n  Array.isArray(val) && val.length === 2 && val.every((v) => v instanceof Date);\n\nconst isFirstDateSet = (val: any) =>\n  Array.isArray(val) && val.length === 2 && val[0] instanceof Date;\n\nconst defaultProps: Partial<DateRangePickerProps> = {\n  shadow: 'sm',\n  transitionDuration: 200,\n  closeCalendarOnChange: true,\n  labelFormat: 'MMMM YYYY',\n  initiallyOpened: false,\n  size: 'sm',\n  dropdownType: 'popover',\n  labelSeparator: '–',\n  clearable: true,\n  firstDayOfWeek: 'monday',\n  allowSingleDateInRange: false,\n  amountOfMonths: 1,\n  withinPortal: false,\n  openDropdownOnClear: false,\n};\n\nexport const DateRangePicker = forwardRef<HTMLInputElement, DateRangePickerProps>(\n  (props: DateRangePickerProps, ref) => {\n    const {\n      value,\n      onChange,\n      defaultValue,\n      classNames,\n      styles,\n      shadow,\n      locale,\n      inputFormat,\n      transitionDuration,\n      transitionTimingFunction,\n      nextMonthLabel,\n      previousMonthLabel,\n      closeCalendarOnChange,\n      labelFormat,\n      dayClassName,\n      dayStyle,\n      disableOutsideEvents,\n      minDate,\n      maxDate,\n      excludeDate,\n      initialMonth,\n      initiallyOpened,\n      size,\n      dropdownType,\n      labelSeparator,\n      clearable,\n      clearButtonLabel,\n      firstDayOfWeek,\n      allowLevelChange,\n      allowSingleDateInRange,\n      amountOfMonths,\n      withinPortal,\n      initialLevel,\n      onDropdownClose,\n      onDropdownOpen,\n      hideOutsideDates,\n      hideWeekdays,\n      renderDay,\n      openDropdownOnClear,\n      unstyled,\n      weekendDays,\n      yearLabelFormat,\n      nextDecadeLabel,\n      nextYearLabel,\n      previousDecadeLabel,\n      previousYearLabel,\n      ...others\n    } = useComponentDefaultProps('DateRangePicker', defaultProps, props);\n\n    const theme = useMantineTheme();\n    const finalLocale = locale || theme.datesLocale;\n    const dateFormat = inputFormat || theme.dateFormat;\n    const [dropdownOpened, setDropdownOpened] = useState(initiallyOpened);\n    const calendarSize = size === 'lg' || size === 'xl' ? 'md' : 'sm';\n    const inputRef = useRef<HTMLInputElement>();\n    const [_value, setValue] = useUncontrolled<[Date, Date]>({\n      value,\n      defaultValue,\n      finalValue: [null, null],\n      onChange,\n    });\n\n    const handleValueChange = (range: [Date, Date]) => {\n      setValue(range);\n      if (closeCalendarOnChange && validationRule(range)) {\n        setDropdownOpened(false);\n        onDropdownClose?.();\n        window.setTimeout(() => inputRef.current?.focus(), 0);\n      }\n    };\n\n    const valueValid = validationRule(_value);\n    const firstValueValid = isFirstDateSet(_value);\n\n    const firstDateLabel = _value[0]\n      ? upperFirst(dayjs(_value[0]).locale(finalLocale).format(dateFormat))\n      : '';\n\n    const secondDateLabel = _value[1]\n      ? upperFirst(dayjs(_value[1]).locale(finalLocale).format(dateFormat))\n      : '';\n\n    const handleClear = () => {\n      setValue([null, null]);\n      setDropdownOpened(true);\n      openDropdownOnClear && onDropdownOpen?.();\n      inputRef.current?.focus();\n    };\n\n    const handleDropdownToggle = (isOpened: boolean) => {\n      if (!isOpened && firstValueValid && _value[1] === null) {\n        handleClear();\n      }\n      setDropdownOpened(isOpened);\n    };\n\n    return (\n      <DatePickerBase\n        dropdownOpened={dropdownOpened}\n        setDropdownOpened={handleDropdownToggle}\n        shadow={shadow}\n        transitionDuration={transitionDuration}\n        ref={useMergedRef(ref, inputRef)}\n        size={size}\n        styles={styles}\n        classNames={classNames}\n        inputLabel={firstValueValid ? `${firstDateLabel} ${labelSeparator} ${secondDateLabel}` : ''}\n        __staticSelector=\"DateRangePicker\"\n        dropdownType={dropdownType}\n        clearable={clearable && firstValueValid}\n        clearButtonLabel={clearButtonLabel}\n        onClear={handleClear}\n        withinPortal={withinPortal}\n        amountOfMonths={amountOfMonths}\n        onDropdownClose={onDropdownClose}\n        onDropdownOpen={onDropdownOpen}\n        unstyled={unstyled}\n        {...others}\n      >\n        <RangeCalendar\n          classNames={classNames}\n          styles={styles}\n          locale={finalLocale}\n          nextMonthLabel={nextMonthLabel}\n          previousMonthLabel={previousMonthLabel}\n          initialMonth={valueValid ? _value[0] : initialMonth}\n          value={_value}\n          onChange={handleValueChange}\n          labelFormat={labelFormat}\n          dayClassName={dayClassName}\n          dayStyle={dayStyle}\n          disableOutsideEvents={disableOutsideEvents}\n          minDate={minDate}\n          maxDate={maxDate}\n          excludeDate={excludeDate}\n          __staticSelector=\"DateRangePicker\"\n          fullWidth={dropdownType === 'modal'}\n          firstDayOfWeek={firstDayOfWeek}\n          size={dropdownType === 'modal' ? 'lg' : calendarSize}\n          allowLevelChange={allowLevelChange}\n          allowSingleDateInRange={allowSingleDateInRange}\n          amountOfMonths={amountOfMonths}\n          initialLevel={initialLevel}\n          hideOutsideDates={hideOutsideDates}\n          hideWeekdays={hideWeekdays}\n          renderDay={renderDay}\n          unstyled={unstyled}\n          weekendDays={weekendDays}\n          yearLabelFormat={yearLabelFormat}\n          nextDecadeLabel={nextDecadeLabel}\n          nextYearLabel={nextYearLabel}\n          previousDecadeLabel={previousDecadeLabel}\n          previousYearLabel={previousYearLabel}\n        />\n      </DatePickerBase>\n    );\n  }\n);\n\nDateRangePicker.displayName = '@mantine/dates/DateRangePicker';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}