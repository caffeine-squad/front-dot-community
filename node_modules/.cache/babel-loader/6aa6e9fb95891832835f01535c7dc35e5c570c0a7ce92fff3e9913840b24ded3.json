{"ast":null,"code":"import React, { forwardRef, useRef, useState } from 'react';\nimport { useComponentDefaultProps, extractSystemStyles, Input, CloseButton } from '@mantine/core';\nimport { useId, useDidUpdate, useMergedRef } from '@mantine/hooks';\nimport { TimeField } from '../TimeInputBase/TimeField/TimeField.js';\nimport { createTimeHandler } from '../TimeInputBase/create-time-handler/create-time-handler.js';\nimport useStyles from './TimeInput.styles.js';\nimport { AmPmInput } from '../TimeInputBase/AmPmInput/AmPmInput.js';\nimport { createAmPmHandler } from '../TimeInputBase/create-amPm-handler/create-amPm-handler.js';\nimport { getDate } from '../TimeInputBase/get-date/get-date.js';\nimport { getTimeValues } from '../TimeInputBase/get-time-values/get-time-value.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst RIGHT_SECTION_WIDTH = {\n  xs: 24,\n  sm: 30,\n  md: 34,\n  lg: 40,\n  xl: 44\n};\nconst defaultProps = {\n  size: \"sm\",\n  withSeconds: false,\n  clearable: false,\n  format: \"24\",\n  amLabel: \"am\",\n  pmLabel: \"pm\",\n  timePlaceholder: \"--\",\n  amPmPlaceholder: \"am\",\n  disabled: false\n};\nconst TimeInput = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"TimeInput\", defaultProps, props),\n    {\n      required,\n      label,\n      error,\n      description,\n      className,\n      style,\n      size,\n      wrapperProps,\n      classNames,\n      styles,\n      id,\n      value,\n      defaultValue,\n      onChange,\n      withSeconds,\n      clearable,\n      clearButtonLabel,\n      format,\n      amLabel,\n      pmLabel,\n      name,\n      hoursLabel,\n      minutesLabel,\n      secondsLabel,\n      amPmLabel,\n      timePlaceholder,\n      amPmPlaceholder,\n      disabled,\n      sx,\n      nextRef,\n      labelProps,\n      descriptionProps,\n      errorProps,\n      unstyled,\n      withAsterisk\n    } = _a,\n    others = __objRest(_a, [\"required\", \"label\", \"error\", \"description\", \"className\", \"style\", \"size\", \"wrapperProps\", \"classNames\", \"styles\", \"id\", \"value\", \"defaultValue\", \"onChange\", \"withSeconds\", \"clearable\", \"clearButtonLabel\", \"format\", \"amLabel\", \"pmLabel\", \"name\", \"hoursLabel\", \"minutesLabel\", \"secondsLabel\", \"amPmLabel\", \"timePlaceholder\", \"amPmPlaceholder\", \"disabled\", \"sx\", \"nextRef\", \"labelProps\", \"descriptionProps\", \"errorProps\", \"unstyled\", \"withAsterisk\"]);\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    size\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"TimeInput\"\n  });\n  const {\n    systemStyles,\n    rest\n  } = extractSystemStyles(others);\n  const uuid = useId(id);\n  const hoursRef = useRef();\n  const minutesRef = useRef();\n  const secondsRef = useRef();\n  const amPmRef = useRef();\n  const [time, setTime] = useState(getTimeValues(value || defaultValue, format, amLabel, pmLabel));\n  const [_value, setValue] = useState(value || defaultValue);\n  useDidUpdate(() => {\n    setTime(getTimeValues(_value, format, amLabel, pmLabel));\n  }, [_value, format, amLabel, pmLabel]);\n  useDidUpdate(() => {\n    if ((value == null ? void 0 : value.getTime()) !== (_value == null ? void 0 : _value.getTime())) {\n      setValue(value);\n    }\n  }, [value]);\n  const setDate = change => {\n    const timeWithChange = __spreadValues(__spreadValues({}, time), change);\n    const newDate = getDate(timeWithChange.hours, timeWithChange.minutes, timeWithChange.seconds, format, pmLabel, timeWithChange.amPm);\n    setValue(newDate);\n    typeof onChange === \"function\" && onChange(newDate);\n  };\n  const handleHoursChange = createTimeHandler({\n    onChange: (val, carryOver) => {\n      setDate({\n        hours: val,\n        minutes: carryOver != null ? carryOver : time.minutes\n      });\n    },\n    min: format === \"12\" ? 1 : 0,\n    max: format === \"12\" ? 12 : 23,\n    nextRef: minutesRef,\n    nextMax: 59\n  });\n  const handleMinutesChange = createTimeHandler({\n    onChange: (val, carryOver) => {\n      setDate({\n        minutes: val,\n        seconds: carryOver != null ? carryOver : time.seconds\n      });\n    },\n    min: 0,\n    max: 59,\n    nextRef: withSeconds ? secondsRef : format === \"12\" ? amPmRef : nextRef,\n    nextMax: withSeconds ? 59 : void 0\n  });\n  const handleSecondsChange = createTimeHandler({\n    onChange: val => {\n      setDate({\n        seconds: val\n      });\n    },\n    min: 0,\n    max: 59,\n    nextRef: format === \"12\" ? amPmRef : nextRef\n  });\n  const handleAmPmChange = createAmPmHandler({\n    amLabel,\n    pmLabel,\n    onChange: val => {\n      setDate({\n        amPm: val\n      });\n    },\n    nextRef\n  });\n  const handleClear = () => {\n    setTime({\n      hours: \"\",\n      minutes: \"\",\n      seconds: \"\",\n      amPm: \"\"\n    });\n    setValue(null);\n    onChange == null ? void 0 : onChange(null);\n    hoursRef.current.focus();\n  };\n  const rightSection = clearable && _value && !disabled ? /* @__PURE__ */React.createElement(CloseButton, {\n    variant: \"transparent\",\n    \"aria-label\": clearButtonLabel,\n    onClick: handleClear,\n    size,\n    unstyled\n  }) : null;\n  return /* @__PURE__ */React.createElement(Input.Wrapper, __spreadValues(__spreadValues({\n    required,\n    label,\n    error,\n    description,\n    className,\n    style,\n    classNames,\n    styles,\n    size,\n    __staticSelector: \"TimeInput\",\n    id: uuid,\n    sx,\n    errorProps,\n    descriptionProps,\n    labelProps,\n    unstyled,\n    withAsterisk\n  }, systemStyles), wrapperProps), /* @__PURE__ */React.createElement(Input, __spreadValues({\n    component: \"div\",\n    __staticSelector: \"TimeInput\",\n    required,\n    invalid: !!error,\n    onClick: () => hoursRef.current.focus(),\n    size,\n    className: cx({\n      [classes.disabled]: disabled\n    }),\n    classNames,\n    styles,\n    disabled,\n    rightSection,\n    rightSectionWidth: theme.fn.size({\n      size,\n      sizes: RIGHT_SECTION_WIDTH\n    }),\n    unstyled\n  }, rest), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.controls\n  }, /* @__PURE__ */React.createElement(TimeField, {\n    ref: useMergedRef(hoursRef, ref),\n    value: time.hours,\n    onChange: handleHoursChange,\n    setValue: val => setTime(current => __spreadProps(__spreadValues({}, current), {\n      hours: val\n    })),\n    id: uuid,\n    className: classes.timeInput,\n    withSeparator: true,\n    size,\n    max: format === \"12\" ? 12 : 23,\n    placeholder: timePlaceholder,\n    \"aria-label\": hoursLabel,\n    disabled,\n    name,\n    unstyled\n  }), /* @__PURE__ */React.createElement(TimeField, {\n    ref: minutesRef,\n    value: time.minutes,\n    onChange: handleMinutesChange,\n    setValue: val => setTime(current => __spreadProps(__spreadValues({}, current), {\n      minutes: val\n    })),\n    className: classes.timeInput,\n    withSeparator: withSeconds,\n    size,\n    max: 59,\n    placeholder: timePlaceholder,\n    \"aria-label\": minutesLabel,\n    disabled,\n    unstyled\n  }), withSeconds && /* @__PURE__ */React.createElement(TimeField, {\n    ref: secondsRef,\n    value: time.seconds,\n    onChange: handleSecondsChange,\n    setValue: val => setTime(current => __spreadProps(__spreadValues({}, current), {\n      seconds: val\n    })),\n    className: classes.timeInput,\n    size,\n    max: 59,\n    placeholder: timePlaceholder,\n    \"aria-label\": secondsLabel,\n    disabled,\n    unstyled\n  }), format === \"12\" && /* @__PURE__ */React.createElement(AmPmInput, {\n    ref: amPmRef,\n    value: time.amPm,\n    onChange: handleAmPmChange,\n    placeholder: amPmPlaceholder,\n    amLabel,\n    pmLabel,\n    size,\n    \"aria-label\": amPmLabel,\n    disabled,\n    unstyled\n  }))));\n});\nTimeInput.displayName = \"@mantine/dates/TimeInput\";\nexport { TimeInput };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","RIGHT_SECTION_WIDTH","xs","sm","md","lg","xl","defaultProps","size","withSeconds","clearable","format","amLabel","pmLabel","timePlaceholder","amPmPlaceholder","disabled","TimeInput","forwardRef","props","ref","_a","useComponentDefaultProps","required","label","error","description","className","style","wrapperProps","classNames","styles","id","defaultValue","onChange","clearButtonLabel","name","hoursLabel","minutesLabel","secondsLabel","amPmLabel","sx","nextRef","labelProps","descriptionProps","errorProps","unstyled","withAsterisk","others","classes","cx","theme","useStyles","systemStyles","rest","extractSystemStyles","uuid","useId","hoursRef","useRef","minutesRef","secondsRef","amPmRef","time","setTime","useState","getTimeValues","_value","setValue","useDidUpdate","getTime","setDate","change","timeWithChange","newDate","getDate","hours","minutes","seconds","amPm","handleHoursChange","createTimeHandler","val","carryOver","min","max","nextMax","handleMinutesChange","handleSecondsChange","handleAmPmChange","createAmPmHandler","handleClear","current","focus","rightSection","React","createElement","CloseButton","variant","onClick","Input","Wrapper","__staticSelector","component","invalid","rightSectionWidth","fn","sizes","controls","TimeField","useMergedRef","timeInput","withSeparator","placeholder","AmPmInput","displayName"],"sources":["C:\\Users\\55859\\Desktop\\front-dot-community\\node_modules\\@mantine\\dates\\src\\components\\TimeInput\\TimeInput.tsx"],"sourcesContent":["import React, { useState, useRef, forwardRef } from 'react';\nimport {\n  InputSharedProps,\n  InputWrapperBaseProps,\n  InputStylesNames,\n  InputWrapperStylesNames,\n  DefaultProps,\n  Input,\n  MantineSize,\n  Selectors,\n  CloseButton,\n  extractSystemStyles,\n  useComponentDefaultProps,\n} from '@mantine/core';\nimport { useDidUpdate, useMergedRef, useId } from '@mantine/hooks';\nimport { TimeField } from '../TimeInputBase/TimeField/TimeField';\nimport { createTimeHandler } from '../TimeInputBase/create-time-handler/create-time-handler';\nimport useStyles from './TimeInput.styles';\nimport { AmPmInput } from '../TimeInputBase/AmPmInput/AmPmInput';\nimport { createAmPmHandler } from '../TimeInputBase/create-amPm-handler/create-amPm-handler';\nimport { getDate } from '../TimeInputBase/get-date/get-date';\nimport { getTimeValues } from '../TimeInputBase/get-time-values/get-time-value';\n\nexport type TimeInputStylesNames =\n  | Selectors<typeof useStyles>\n  | InputStylesNames\n  | InputWrapperStylesNames;\n\nexport interface TimeInputProps\n  extends DefaultProps<TimeInputStylesNames>,\n    InputSharedProps,\n    InputWrapperBaseProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'onChange' | 'value' | 'defaultValue'> {\n  /** Input size */\n  size?: MantineSize;\n\n  /** Controlled input value */\n  value?: Date | null;\n\n  /** Uncontrolled input default value */\n  defaultValue?: Date | null;\n\n  /** Controlled input onChange handler */\n  onChange?(value: Date): void;\n\n  /** Display seconds input */\n  withSeconds?: boolean;\n\n  /** Allow to clear item */\n  clearable?: boolean;\n\n  /** aria-label for clear button */\n  clearButtonLabel?: string;\n\n  /** Time format */\n  format?: '12' | '24';\n\n  /** Label for 'am' */\n  amLabel?: string;\n\n  /** Label for 'pm' */\n  pmLabel?: string;\n\n  /** Uncontrolled input name */\n  name?: string;\n\n  /** aria-label for hours input */\n  hoursLabel?: string;\n\n  /** aria-label for minutes input */\n  minutesLabel?: string;\n\n  /** aria-label for seconds input */\n  secondsLabel?: string;\n\n  /** aria-label for am/pm input */\n  amPmLabel?: string;\n\n  /** Placeholder for hours/minutes/seconds inputs*/\n  timePlaceholder?: string;\n\n  /** Placeholder for am/pm input */\n  amPmPlaceholder?: string;\n\n  /** Disable field */\n  disabled?: boolean;\n\n  /** Ref to focus after final TimeInput field. Used by TimeRangeInput */\n  nextRef?: React.RefObject<HTMLInputElement>;\n}\n\nconst RIGHT_SECTION_WIDTH = {\n  xs: 24,\n  sm: 30,\n  md: 34,\n  lg: 40,\n  xl: 44,\n};\n\nconst defaultProps: Partial<TimeInputProps> = {\n  size: 'sm',\n  withSeconds: false,\n  clearable: false,\n  format: '24',\n  amLabel: 'am',\n  pmLabel: 'pm',\n  timePlaceholder: '--',\n  amPmPlaceholder: 'am',\n  disabled: false,\n};\n\nexport const TimeInput = forwardRef<HTMLInputElement, TimeInputProps>(\n  (props: TimeInputProps, ref) => {\n    const {\n      required,\n      label,\n      error,\n      description,\n      className,\n      style,\n      size,\n      wrapperProps,\n      classNames,\n      styles,\n      id,\n      value,\n      defaultValue,\n      onChange,\n      withSeconds,\n      clearable,\n      clearButtonLabel,\n      format,\n      amLabel,\n      pmLabel,\n      name,\n      hoursLabel,\n      minutesLabel,\n      secondsLabel,\n      amPmLabel,\n      timePlaceholder,\n      amPmPlaceholder,\n      disabled,\n      sx,\n      nextRef,\n      labelProps,\n      descriptionProps,\n      errorProps,\n      unstyled,\n      withAsterisk,\n      ...others\n    } = useComponentDefaultProps('TimeInput', defaultProps, props);\n\n    const { classes, cx, theme } = useStyles(\n      { size },\n      { classNames, styles, unstyled, name: 'TimeInput' }\n    );\n    const { systemStyles, rest } = extractSystemStyles(others);\n    const uuid = useId(id);\n\n    const hoursRef = useRef<HTMLInputElement>();\n    const minutesRef = useRef<HTMLInputElement>();\n    const secondsRef = useRef<HTMLInputElement>();\n    const amPmRef = useRef<HTMLInputElement>();\n    const [time, setTime] = useState<{\n      hours: string;\n      minutes: string;\n      seconds: string;\n      amPm: string;\n    }>(getTimeValues(value || defaultValue, format, amLabel, pmLabel));\n    const [_value, setValue] = useState<Date | null>(value || defaultValue);\n\n    useDidUpdate(() => {\n      setTime(getTimeValues(_value, format, amLabel, pmLabel));\n    }, [_value, format, amLabel, pmLabel]);\n\n    // Allow controlled value prop to override internal _value\n    useDidUpdate(() => {\n      if (value?.getTime() !== _value?.getTime()) {\n        setValue(value);\n      }\n    }, [value]);\n\n    const setDate = (change: Partial<typeof time>) => {\n      const timeWithChange = { ...time, ...change };\n      const newDate = getDate(\n        timeWithChange.hours,\n        timeWithChange.minutes,\n        timeWithChange.seconds,\n        format,\n        pmLabel,\n        timeWithChange.amPm\n      );\n      setValue(newDate);\n      typeof onChange === 'function' && onChange(newDate);\n    };\n\n    const handleHoursChange = createTimeHandler({\n      onChange: (val, carryOver) => {\n        setDate({\n          hours: val,\n          minutes: carryOver ?? time.minutes,\n        });\n      },\n      min: format === '12' ? 1 : 0,\n      max: format === '12' ? 12 : 23,\n      nextRef: minutesRef,\n      nextMax: 59,\n    });\n\n    const handleMinutesChange = createTimeHandler({\n      onChange: (val, carryOver) => {\n        setDate({\n          minutes: val,\n          seconds: carryOver ?? time.seconds,\n        });\n      },\n      min: 0,\n      max: 59,\n      nextRef: withSeconds ? secondsRef : format === '12' ? amPmRef : nextRef,\n      nextMax: withSeconds ? 59 : undefined,\n    });\n\n    const handleSecondsChange = createTimeHandler({\n      onChange: (val) => {\n        setDate({ seconds: val });\n      },\n      min: 0,\n      max: 59,\n      nextRef: format === '12' ? amPmRef : nextRef,\n    });\n\n    const handleAmPmChange = createAmPmHandler({\n      amLabel,\n      pmLabel,\n      onChange: (val) => {\n        setDate({ amPm: val });\n      },\n      nextRef,\n    });\n\n    const handleClear = () => {\n      setTime({ hours: '', minutes: '', seconds: '', amPm: '' });\n      setValue(null);\n      onChange?.(null);\n      hoursRef.current.focus();\n    };\n\n    const rightSection =\n      clearable && _value && !disabled ? (\n        <CloseButton\n          variant=\"transparent\"\n          aria-label={clearButtonLabel}\n          onClick={handleClear}\n          size={size}\n          unstyled={unstyled}\n        />\n      ) : null;\n\n    return (\n      <Input.Wrapper\n        required={required}\n        label={label}\n        error={error}\n        description={description}\n        className={className}\n        style={style}\n        classNames={classNames}\n        styles={styles}\n        size={size}\n        __staticSelector=\"TimeInput\"\n        id={uuid}\n        sx={sx}\n        errorProps={errorProps}\n        descriptionProps={descriptionProps}\n        labelProps={labelProps}\n        unstyled={unstyled}\n        withAsterisk={withAsterisk}\n        {...systemStyles}\n        {...wrapperProps}\n      >\n        <Input\n          component=\"div\"\n          __staticSelector=\"TimeInput\"\n          required={required}\n          invalid={!!error}\n          onClick={() => hoursRef.current.focus()}\n          size={size}\n          className={cx({ [classes.disabled]: disabled })}\n          classNames={classNames}\n          styles={styles}\n          disabled={disabled}\n          rightSection={rightSection}\n          rightSectionWidth={theme.fn.size({ size, sizes: RIGHT_SECTION_WIDTH })}\n          unstyled={unstyled}\n          {...rest}\n        >\n          <div className={classes.controls}>\n            <TimeField\n              ref={useMergedRef(hoursRef, ref)}\n              value={time.hours}\n              onChange={handleHoursChange}\n              setValue={(val) => setTime((current) => ({ ...current, hours: val }))}\n              id={uuid}\n              className={classes.timeInput}\n              withSeparator\n              size={size}\n              max={format === '12' ? 12 : 23}\n              placeholder={timePlaceholder}\n              aria-label={hoursLabel}\n              disabled={disabled}\n              name={name}\n              unstyled={unstyled}\n            />\n            <TimeField\n              ref={minutesRef}\n              value={time.minutes}\n              onChange={handleMinutesChange}\n              setValue={(val) => setTime((current) => ({ ...current, minutes: val }))}\n              className={classes.timeInput}\n              withSeparator={withSeconds}\n              size={size}\n              max={59}\n              placeholder={timePlaceholder}\n              aria-label={minutesLabel}\n              disabled={disabled}\n              unstyled={unstyled}\n            />\n            {withSeconds && (\n              <TimeField\n                ref={secondsRef}\n                value={time.seconds}\n                onChange={handleSecondsChange}\n                setValue={(val) => setTime((current) => ({ ...current, seconds: val }))}\n                className={classes.timeInput}\n                size={size}\n                max={59}\n                placeholder={timePlaceholder}\n                aria-label={secondsLabel}\n                disabled={disabled}\n                unstyled={unstyled}\n              />\n            )}\n            {format === '12' && (\n              <AmPmInput\n                ref={amPmRef}\n                value={time.amPm}\n                onChange={handleAmPmChange}\n                placeholder={amPmPlaceholder}\n                amLabel={amLabel}\n                pmLabel={pmLabel}\n                size={size}\n                aria-label={amPmLabel}\n                disabled={disabled}\n                unstyled={unstyled}\n              />\n            )}\n          </div>\n        </Input>\n      </Input.Wrapper>\n    );\n  }\n);\n\nTimeInput.displayName = '@mantine/dates/TimeInput';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}