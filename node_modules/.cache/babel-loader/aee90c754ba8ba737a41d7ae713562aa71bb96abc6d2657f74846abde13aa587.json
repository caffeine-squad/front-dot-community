{"ast":null,"code":"import React, { forwardRef, useState, useRef } from 'react';\nimport { useMergedRef, clamp } from '@mantine/hooks';\nimport { Text } from '@mantine/core';\nimport { padTime } from '../pad-time/pad-time.js';\nimport useStyles from '../TimeInputBase.styles.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst TimeField = forwardRef((_a, ref) => {\n  var _b = _a,\n    {\n      className,\n      onFocus,\n      onBlur,\n      onChange,\n      setValue,\n      withSeparator = false,\n      size = \"sm\",\n      max,\n      min = 0,\n      value,\n      unstyled\n    } = _b,\n    others = __objRest(_b, [\"className\", \"onFocus\", \"onBlur\", \"onChange\", \"setValue\", \"withSeparator\", \"size\", \"max\", \"min\", \"value\", \"unstyled\"]);\n  const [digitsEntered, setDigitsEntered] = useState(0);\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    size,\n    hasValue: !!value\n  }, {\n    name: \"TimeField\",\n    unstyled\n  });\n  const inputRef = useRef();\n  const handleFocus = event => {\n    typeof onFocus === \"function\" && onFocus(event);\n    inputRef.current.select();\n    setDigitsEntered(0);\n  };\n  const handleBlur = event => {\n    typeof onBlur === \"function\" && onBlur(event);\n    if (digitsEntered === 1) {\n      typeof onChange === \"function\" && onChange(event.currentTarget.value, false);\n    }\n  };\n  const handleClick = event => {\n    event.stopPropagation();\n    inputRef.current.select();\n  };\n  const handleKeyDown = event => {\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      const padded = padTime(clamp(parseInt(event.currentTarget.value, 10) + 1, min, max).toString());\n      if (value !== padded) {\n        onChange(padded, false);\n      }\n    }\n    if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      const padded = padTime(clamp(parseInt(event.currentTarget.value, 10) - 1, min, max).toString());\n      if (value !== padded) {\n        onChange(padded, false);\n      }\n    }\n  };\n  const handleChange = event => {\n    setDigitsEntered(digitsEntered + 1);\n    const _val = parseInt(event.currentTarget.value, 10).toString();\n    if (_val === \"0\" && digitsEntered === 0) {\n      setValue(\"00\");\n      return;\n    }\n    onChange(_val, true, digitsEntered > 0);\n  };\n  return /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(\"input\", __spreadValues({\n    type: \"text\",\n    inputMode: \"numeric\",\n    ref: useMergedRef(inputRef, ref),\n    onChange: handleChange,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onKeyDown: handleKeyDown,\n    value,\n    className: cx(classes.timeInput, className)\n  }, others)), withSeparator && /* @__PURE__ */React.createElement(Text, {\n    size,\n    unstyled,\n    style: {\n      lineHeight: 1,\n      color: value ? \"inherit\" : theme.colorScheme === \"dark\" ? theme.colors.dark[2] : theme.colors.gray[7]\n    }\n  }, \":\"));\n});\nTimeField.displayName = \"@mantine/dates/TimeField\";\nexport { TimeField };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","TimeField","forwardRef","_a","ref","_b","className","onFocus","onBlur","onChange","setValue","withSeparator","size","max","min","unstyled","others","digitsEntered","setDigitsEntered","useState","classes","cx","theme","useStyles","hasValue","name","inputRef","useRef","handleFocus","event","current","select","handleBlur","currentTarget","handleClick","stopPropagation","handleKeyDown","preventDefault","padded","padTime","clamp","parseInt","toString","handleChange","_val","React","createElement","Fragment","type","inputMode","useMergedRef","onClick","onKeyDown","timeInput","Text","style","lineHeight","color","colorScheme","colors","dark","gray","displayName"],"sources":["C:\\Users\\55859\\Desktop\\front-dot-community\\node_modules\\@mantine\\dates\\src\\components\\TimeInputBase\\TimeField\\TimeField.tsx"],"sourcesContent":["import React, { useRef, forwardRef, useState } from 'react';\nimport { useMergedRef, clamp } from '@mantine/hooks';\nimport { Text, MantineSize } from '@mantine/core';\nimport { padTime } from '../pad-time/pad-time';\nimport useStyles from '../TimeInputBase.styles';\nimport type { createTimeHandler } from '../create-time-handler/create-time-handler';\n\ninterface TimeFieldProps\n  extends Omit<React.ComponentPropsWithoutRef<'input'>, 'onChange' | 'size'> {\n  /** Called with onChange event */\n  onChange: ReturnType<typeof createTimeHandler>;\n\n  /** Called to set input value and bypass parent validation/onChange calls */\n  setValue(value: string): void;\n\n  /** Adds colon after the field */\n  withSeparator?: boolean;\n\n  /** Colon text size */\n  size?: MantineSize;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Minimum possible value. Default 0 */\n  min?: number;\n\n  unstyled?: boolean;\n}\n\nexport const TimeField = forwardRef<HTMLInputElement, TimeFieldProps>(\n  (\n    {\n      className,\n      onFocus,\n      onBlur,\n      onChange,\n      setValue,\n      withSeparator = false,\n      size = 'sm',\n      max,\n      min = 0,\n      value,\n      unstyled,\n      ...others\n    }: TimeFieldProps,\n    ref\n  ) => {\n    const [digitsEntered, setDigitsEntered] = useState(0);\n    const { classes, cx, theme } = useStyles(\n      { size, hasValue: !!value },\n      { name: 'TimeField', unstyled }\n    );\n    const inputRef = useRef<HTMLInputElement>();\n\n    const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n      typeof onFocus === 'function' && onFocus(event);\n      inputRef.current.select();\n      setDigitsEntered(0);\n    };\n\n    const handleBlur = (event: any) => {\n      typeof onBlur === 'function' && onBlur(event);\n      // Call onChange in case the only digit entered is 0\n      if (digitsEntered === 1) {\n        typeof onChange === 'function' && onChange(event.currentTarget.value, false);\n      }\n    };\n\n    const handleClick = (event: React.MouseEvent<HTMLInputElement, MouseEvent>) => {\n      event.stopPropagation();\n      inputRef.current.select();\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'ArrowUp') {\n        event.preventDefault();\n        const padded = padTime(\n          clamp(parseInt(event.currentTarget.value, 10) + 1, min, max).toString()\n        );\n\n        if (value !== padded) {\n          onChange(padded, false);\n        }\n      }\n\n      if (event.key === 'ArrowDown') {\n        event.preventDefault();\n        const padded = padTime(\n          clamp(parseInt(event.currentTarget.value, 10) - 1, min, max).toString()\n        );\n\n        if (value !== padded) {\n          onChange(padded, false);\n        }\n      }\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setDigitsEntered(digitsEntered + 1);\n\n      const _val = parseInt(event.currentTarget.value, 10).toString();\n\n      // In 12-hour format, 0 is not allowed, but it could be the start of 01, 02, etc.\n      if (_val === '0' && digitsEntered === 0) {\n        setValue('00');\n        return;\n      }\n      onChange(_val, true, digitsEntered > 0);\n    };\n\n    return (\n      <>\n        <input\n          type=\"text\"\n          inputMode=\"numeric\"\n          ref={useMergedRef(inputRef, ref)}\n          onChange={handleChange}\n          onClick={handleClick}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          value={value}\n          className={cx(classes.timeInput, className)}\n          {...others}\n        />\n\n        {withSeparator && (\n          <Text\n            size={size}\n            unstyled={unstyled}\n            style={{\n              lineHeight: 1,\n              color: value\n                ? 'inherit'\n                : theme.colorScheme === 'dark'\n                ? theme.colors.dark[2]\n                : theme.colors.gray[7],\n            }}\n          >\n            :\n          </Text>\n        )}\n      </>\n    );\n  }\n);\n\nTimeField.displayName = '@mantine/dates/TimeField';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}