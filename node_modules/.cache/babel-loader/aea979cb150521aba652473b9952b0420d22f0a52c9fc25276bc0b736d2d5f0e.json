{"ast":null,"code":"function createAmPmHandler(_ref) {\n  let {\n    amLabel,\n    pmLabel,\n    onChange,\n    nextRef\n  } = _ref;\n  return (value, triggerShift) => {\n    var _a, _b;\n    const testRegex = new RegExp(`(^(${amLabel}|${pmLabel})?$)`);\n    const valLower = value.toLowerCase();\n    if (valLower === amLabel || valLower === pmLabel) {\n      onChange(valLower);\n      triggerShift && ((_a = nextRef == null ? void 0 : nextRef.current) == null ? void 0 : _a.focus());\n      triggerShift && ((_b = nextRef == null ? void 0 : nextRef.current) == null ? void 0 : _b.select());\n      return;\n    }\n    if (!testRegex.test(valLower)) {\n      return;\n    }\n    onChange(valLower);\n  };\n}\nexport { createAmPmHandler };","map":{"version":3,"mappings":"AAAO,SAASA,iBAAiB,OAA0C;EAAA,IAAzC;IAAEC,OAAO;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAO,CAAE;EACvE,OAAO,CAACC,KAAK,EAAEC,YAAY,KAAK;IAC9B,IAAIC,EAAE,EAAEC,EAAE;IACV,MAAMC,SAAS,GAAG,IAAIC,MAAM,CAAE,MAAKT,OAAQ,IAAGC,OAAQ,MAAK,CAAC;IAC5D,MAAMS,QAAQ,GAAGN,KAAK,CAACO,WAAW,EAAE;IACpC,IAAID,QAAQ,KAAKV,OAAO,IAAIU,QAAQ,KAAKT,OAAO,EAAE;MAChDC,QAAQ,CAACQ,QAAQ,CAAC;MAClBL,YAAY,KAAK,CAACC,EAAE,GAAGH,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACS,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGN,EAAE,CAACO,KAAK,EAAE,CAAC;MACjGR,YAAY,KAAK,CAACE,EAAE,GAAGJ,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACS,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGL,EAAE,CAACO,MAAM,EAAE,CAAC;MAClG;IACN;IACI,IAAI,CAACN,SAAS,CAACO,IAAI,CAACL,QAAQ,CAAC,EAAE;MAC7B;IACN;IACIR,QAAQ,CAACQ,QAAQ,CAAC;EACtB,CAAG;AACH","names":["createAmPmHandler","amLabel","pmLabel","onChange","nextRef","value","triggerShift","_a","_b","testRegex","RegExp","valLower","toLowerCase","current","focus","select","test"],"sources":["C:\\Users\\55859\\Desktop\\front-dot-community\\node_modules\\@mantine\\dates\\src\\components\\TimeInputBase\\create-amPm-handler\\create-amPm-handler.tsx"],"sourcesContent":["interface CreateAmPmHandler {\n  amLabel: string;\n  pmLabel: string;\n  onChange(value: string): void;\n  nextRef?: React.RefObject<HTMLInputElement>;\n}\n\nexport function createAmPmHandler({ amLabel, pmLabel, onChange, nextRef }: CreateAmPmHandler) {\n  return (value: string, triggerShift: boolean) => {\n    const testRegex = new RegExp(`(^(${amLabel}|${pmLabel})?$)`);\n    const valLower = value.toLowerCase();\n\n    if (valLower === amLabel || valLower === pmLabel) {\n      onChange(valLower);\n      triggerShift && nextRef?.current?.focus();\n      triggerShift && nextRef?.current?.select();\n      return;\n    }\n\n    if (!testRegex.test(valLower)) {\n      return;\n    }\n\n    onChange(valLower);\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}