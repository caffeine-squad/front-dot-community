{"ast":null,"code":"import React, { forwardRef, useRef, useState } from 'react';\nimport { useComponentDefaultProps, extractSystemStyles, CloseButton, Input } from '@mantine/core';\nimport { useId, useDidUpdate, useMergedRef } from '@mantine/hooks';\nimport useStyles from './TimeRangeInput.styles.js';\nimport { TimeInput } from '../TimeInput/TimeInput.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst RIGHT_SECTION_WIDTH = {\n  xs: 24,\n  sm: 30,\n  md: 34,\n  lg: 40,\n  xl: 44\n};\nconst defaultProps = {\n  size: \"sm\",\n  defaultValue: [null, null],\n  withSeconds: false,\n  clearable: false,\n  format: \"24\",\n  timePlaceholder: \"--\",\n  amPmPlaceholder: \"am\",\n  labelSeparator: \"\\u2013\",\n  disabled: false\n};\nconst TimeRangeInput = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"TimeRangeInput\", defaultProps, props),\n    {\n      required,\n      label,\n      error,\n      description,\n      className,\n      style,\n      size,\n      wrapperProps,\n      classNames,\n      styles,\n      id,\n      value,\n      defaultValue,\n      onChange,\n      withSeconds,\n      clearable,\n      clearButtonLabel,\n      format,\n      name,\n      hoursLabel,\n      minutesLabel,\n      secondsLabel,\n      amPmLabel,\n      timePlaceholder,\n      amPmPlaceholder,\n      labelSeparator,\n      disabled,\n      sx,\n      labelProps,\n      descriptionProps,\n      errorProps,\n      unstyled,\n      withAsterisk\n    } = _a,\n    others = __objRest(_a, [\"required\", \"label\", \"error\", \"description\", \"className\", \"style\", \"size\", \"wrapperProps\", \"classNames\", \"styles\", \"id\", \"value\", \"defaultValue\", \"onChange\", \"withSeconds\", \"clearable\", \"clearButtonLabel\", \"format\", \"name\", \"hoursLabel\", \"minutesLabel\", \"secondsLabel\", \"amPmLabel\", \"timePlaceholder\", \"amPmPlaceholder\", \"labelSeparator\", \"disabled\", \"sx\", \"labelProps\", \"descriptionProps\", \"errorProps\", \"unstyled\", \"withAsterisk\"]);\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    size\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"TimeRangeInput\"\n  });\n  const {\n    systemStyles,\n    rest\n  } = extractSystemStyles(others);\n  const uuid = useId(id);\n  const fromTimeRef = useRef();\n  const toTimeRef = useRef();\n  const [_value, setValue] = useState(value != null ? value : defaultValue);\n  useDidUpdate(() => {\n    typeof onChange === \"function\" && onChange(_value);\n  }, [_value]);\n  useDidUpdate(() => {\n    var _a2, _b, _c, _d;\n    if (((_a2 = value[0]) == null ? void 0 : _a2.getTime()) !== ((_b = _value[0]) == null ? void 0 : _b.getTime()) || ((_c = value[1]) == null ? void 0 : _c.getTime()) !== ((_d = _value[1]) == null ? void 0 : _d.getTime())) {\n      setValue(value);\n    }\n  }, [value]);\n  const handleClear = () => {\n    var _a2;\n    setValue([null, null]);\n    (_a2 = fromTimeRef.current) == null ? void 0 : _a2.focus();\n  };\n  const rightSection = clearable && _value.filter(item => Boolean(item)).length > 0 ? /* @__PURE__ */React.createElement(CloseButton, {\n    variant: \"transparent\",\n    \"aria-label\": clearButtonLabel,\n    onClick: handleClear,\n    size,\n    unstyled\n  }) : null;\n  const forwardProps = {\n    amPmLabel,\n    amPmPlaceholder,\n    disabled,\n    format,\n    hoursLabel,\n    minutesLabel,\n    secondsLabel,\n    size,\n    timePlaceholder,\n    withSeconds\n  };\n  return /* @__PURE__ */React.createElement(Input.Wrapper, __spreadValues(__spreadValues({\n    required,\n    label,\n    error,\n    description,\n    className,\n    style,\n    classNames,\n    styles,\n    size,\n    __staticSelector: \"TimeRangeInput\",\n    id: uuid,\n    sx,\n    errorProps,\n    descriptionProps,\n    labelProps,\n    unstyled,\n    withAsterisk\n  }, systemStyles), wrapperProps), /* @__PURE__ */React.createElement(Input, __spreadValues({\n    component: \"div\",\n    __staticSelector: \"TimeRangeInput\",\n    required,\n    invalid: !!error,\n    onClick: () => {\n      var _a2;\n      (_a2 = fromTimeRef.current) == null ? void 0 : _a2.focus();\n    },\n    size,\n    className: cx({\n      [classes.disabled]: disabled\n    }),\n    classNames,\n    styles,\n    disabled,\n    rightSection,\n    rightSectionWidth: theme.fn.size({\n      size,\n      sizes: RIGHT_SECTION_WIDTH\n    }),\n    unstyled\n  }, rest), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.inputWrapper\n  }, /* @__PURE__ */React.createElement(TimeInput, __spreadValues({\n    ref: useMergedRef(fromTimeRef, ref),\n    variant: \"unstyled\",\n    value: _value[0],\n    onChange: date => setValue([date, _value[1]]),\n    name,\n    nextRef: toTimeRef,\n    id: uuid,\n    unstyled\n  }, forwardProps)), /* @__PURE__ */React.createElement(\"span\", {\n    className: classes.separator,\n    style: {\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[2] : theme.colors.gray[7]\n    }\n  }, labelSeparator), /* @__PURE__ */React.createElement(TimeInput, __spreadValues({\n    ref: toTimeRef,\n    variant: \"unstyled\",\n    value: _value[1],\n    onChange: date => setValue([_value[0], date]),\n    unstyled\n  }, forwardProps)))));\n});\nTimeRangeInput.displayName = \"@mantine/dates/TimeRangeInput\";\nexport { TimeRangeInput };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","RIGHT_SECTION_WIDTH","xs","sm","md","lg","xl","defaultProps","size","defaultValue","withSeconds","clearable","format","timePlaceholder","amPmPlaceholder","labelSeparator","disabled","TimeRangeInput","forwardRef","props","ref","_a","useComponentDefaultProps","required","label","error","description","className","style","wrapperProps","classNames","styles","id","onChange","clearButtonLabel","name","hoursLabel","minutesLabel","secondsLabel","amPmLabel","sx","labelProps","descriptionProps","errorProps","unstyled","withAsterisk","others","classes","cx","theme","useStyles","systemStyles","rest","extractSystemStyles","uuid","useId","fromTimeRef","useRef","toTimeRef","_value","setValue","useState","useDidUpdate","_a2","_b","_c","_d","getTime","handleClear","current","focus","rightSection","filter","item","Boolean","length","React","createElement","CloseButton","variant","onClick","forwardProps","Input","Wrapper","__staticSelector","component","invalid","rightSectionWidth","fn","sizes","inputWrapper","TimeInput","useMergedRef","date","nextRef","separator","color","colorScheme","colors","dark","gray","displayName"],"sources":["C:\\Users\\55859\\Desktop\\front-dot-community\\node_modules\\@mantine\\dates\\src\\components\\TimeRangeInput\\TimeRangeInput.tsx"],"sourcesContent":["import React, { useState, useRef, forwardRef } from 'react';\nimport {\n  InputSharedProps,\n  InputWrapperBaseProps,\n  InputStylesNames,\n  InputWrapperStylesNames,\n  DefaultProps,\n  Input,\n  MantineSize,\n  Selectors,\n  CloseButton,\n  extractSystemStyles,\n  useComponentDefaultProps,\n} from '@mantine/core';\nimport { useDidUpdate, useMergedRef, useId } from '@mantine/hooks';\nimport useStyles from './TimeRangeInput.styles';\nimport { TimeInput } from '../TimeInput';\n\nexport type TimeRangeInputStylesNames =\n  | Exclude<Selectors<typeof useStyles>, 'disabled'>\n  | InputStylesNames\n  | InputWrapperStylesNames;\n\nexport interface TimeRangeInputProps\n  extends DefaultProps<TimeRangeInputStylesNames>,\n    InputSharedProps,\n    InputWrapperBaseProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'onChange' | 'value' | 'defaultValue'> {\n  /** Input size */\n  size?: MantineSize;\n\n  /** Controlled input value */\n  value?: [Date | null, Date | null];\n\n  /** Uncontrolled input default value */\n  defaultValue?: [Date | null, Date | null];\n\n  /** Controlled input onChange handler */\n  onChange?(value: [Date, Date]): void;\n\n  /** Display seconds input */\n  withSeconds?: boolean;\n\n  /** Allow to clear item */\n  clearable?: boolean;\n\n  /** aria-label for clear button */\n  clearButtonLabel?: string;\n\n  /** The time format */\n  format?: '12' | '24';\n\n  /** Uncontrolled input name */\n  name?: string;\n\n  /** aria-label for hours input */\n  hoursLabel?: string;\n\n  /** aria-label for minutes input */\n  minutesLabel?: string;\n\n  /** aria-label for seconds input */\n  secondsLabel?: string;\n\n  /** aria-label for am/pm input */\n  amPmLabel?: string;\n\n  /** placeholder for time input */\n  timePlaceholder?: string;\n\n  /** placeholder for am/pm input */\n  amPmPlaceholder?: string;\n\n  /** Disable field */\n  disabled?: boolean;\n\n  /** Separator between time inputs */\n  labelSeparator?: string;\n}\n\nconst RIGHT_SECTION_WIDTH = {\n  xs: 24,\n  sm: 30,\n  md: 34,\n  lg: 40,\n  xl: 44,\n};\n\nconst defaultProps: Partial<TimeRangeInputProps> = {\n  size: 'sm',\n  defaultValue: [null, null],\n  withSeconds: false,\n  clearable: false,\n  format: '24',\n  timePlaceholder: '--',\n  amPmPlaceholder: 'am',\n  labelSeparator: '–',\n  disabled: false,\n};\n\nexport const TimeRangeInput = forwardRef<HTMLInputElement, TimeRangeInputProps>(\n  (props: TimeRangeInputProps, ref) => {\n    const {\n      required,\n      label,\n      error,\n      description,\n      className,\n      style,\n      size,\n      wrapperProps,\n      classNames,\n      styles,\n      id,\n      value,\n      defaultValue,\n      onChange,\n      withSeconds,\n      clearable,\n      clearButtonLabel,\n      format,\n      name,\n      hoursLabel,\n      minutesLabel,\n      secondsLabel,\n      amPmLabel,\n      timePlaceholder,\n      amPmPlaceholder,\n      labelSeparator,\n      disabled,\n      sx,\n      labelProps,\n      descriptionProps,\n      errorProps,\n      unstyled,\n      withAsterisk,\n      ...others\n    } = useComponentDefaultProps('TimeRangeInput', defaultProps, props);\n\n    const { classes, cx, theme } = useStyles(\n      { size },\n      { classNames, styles, unstyled, name: 'TimeRangeInput' }\n    );\n\n    const { systemStyles, rest } = extractSystemStyles(others);\n    const uuid = useId(id);\n\n    const fromTimeRef = useRef<HTMLInputElement>();\n    const toTimeRef = useRef<HTMLInputElement>();\n    const [_value, setValue] = useState<[Date, Date]>(value ?? defaultValue);\n\n    useDidUpdate(() => {\n      typeof onChange === 'function' && onChange(_value);\n    }, [_value]);\n\n    // Allow controlled value prop to override internal _value\n    useDidUpdate(() => {\n      if (\n        value[0]?.getTime() !== _value[0]?.getTime() ||\n        value[1]?.getTime() !== _value[1]?.getTime()\n      ) {\n        setValue(value);\n      }\n    }, [value]);\n\n    const handleClear = () => {\n      setValue([null, null]);\n      fromTimeRef.current?.focus();\n    };\n\n    const rightSection =\n      clearable && _value.filter((item) => Boolean(item)).length > 0 ? (\n        <CloseButton\n          variant=\"transparent\"\n          aria-label={clearButtonLabel}\n          onClick={handleClear}\n          size={size}\n          unstyled={unstyled}\n        />\n      ) : null;\n\n    const forwardProps = {\n      amPmLabel,\n      amPmPlaceholder,\n      disabled,\n      format,\n      hoursLabel,\n      minutesLabel,\n      secondsLabel,\n      size,\n      timePlaceholder,\n      withSeconds,\n    };\n\n    return (\n      <Input.Wrapper\n        required={required}\n        label={label}\n        error={error}\n        description={description}\n        className={className}\n        style={style}\n        classNames={classNames}\n        styles={styles}\n        size={size}\n        __staticSelector=\"TimeRangeInput\"\n        id={uuid}\n        sx={sx}\n        errorProps={errorProps}\n        descriptionProps={descriptionProps}\n        labelProps={labelProps}\n        unstyled={unstyled}\n        withAsterisk={withAsterisk}\n        {...systemStyles}\n        {...wrapperProps}\n      >\n        <Input\n          component=\"div\"\n          __staticSelector=\"TimeRangeInput\"\n          required={required}\n          invalid={!!error}\n          onClick={() => {\n            fromTimeRef.current?.focus();\n          }}\n          size={size}\n          className={cx({ [classes.disabled]: disabled })}\n          classNames={classNames}\n          styles={styles}\n          disabled={disabled}\n          rightSection={rightSection}\n          rightSectionWidth={theme.fn.size({ size, sizes: RIGHT_SECTION_WIDTH })}\n          unstyled={unstyled}\n          {...rest}\n        >\n          <div className={classes.inputWrapper}>\n            <TimeInput\n              ref={useMergedRef(fromTimeRef, ref)}\n              variant=\"unstyled\"\n              value={_value[0]}\n              onChange={(date) => setValue([date, _value[1]])}\n              name={name}\n              nextRef={toTimeRef}\n              id={uuid}\n              unstyled={unstyled}\n              {...forwardProps}\n            />\n\n            <span\n              className={classes.separator}\n              style={{\n                color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[7],\n              }}\n            >\n              {labelSeparator}\n            </span>\n\n            <TimeInput\n              ref={toTimeRef}\n              variant=\"unstyled\"\n              value={_value[1]}\n              onChange={(date) => setValue([_value[0], date])}\n              unstyled={unstyled}\n              {...forwardProps}\n            />\n          </div>\n        </Input>\n      </Input.Wrapper>\n    );\n  }\n);\n\nTimeRangeInput.displayName = '@mantine/dates/TimeRangeInput';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}